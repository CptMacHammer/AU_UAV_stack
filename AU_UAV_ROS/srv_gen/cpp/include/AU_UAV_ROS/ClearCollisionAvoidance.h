/* Auto-generated by genmsg_cpp for file /home/phil/fuerte_workspace/sandbox/AU_UAV_stack/AU_UAV_ROS/srv/ClearCollisionAvoidance.srv */
#ifndef AU_UAV_ROS_SERVICE_CLEARCOLLISIONAVOIDANCE_H
#define AU_UAV_ROS_SERVICE_CLEARCOLLISIONAVOIDANCE_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"




namespace AU_UAV_ROS
{
template <class ContainerAllocator>
struct ClearCollisionAvoidanceRequest_ {
  typedef ClearCollisionAvoidanceRequest_<ContainerAllocator> Type;

  ClearCollisionAvoidanceRequest_()
  : hello()
  {
  }

  ClearCollisionAvoidanceRequest_(const ContainerAllocator& _alloc)
  : hello(_alloc)
  {
  }

  typedef std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  _hello_type;
  std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  hello;


  typedef boost::shared_ptr< ::AU_UAV_ROS::ClearCollisionAvoidanceRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::AU_UAV_ROS::ClearCollisionAvoidanceRequest_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct ClearCollisionAvoidanceRequest
typedef  ::AU_UAV_ROS::ClearCollisionAvoidanceRequest_<std::allocator<void> > ClearCollisionAvoidanceRequest;

typedef boost::shared_ptr< ::AU_UAV_ROS::ClearCollisionAvoidanceRequest> ClearCollisionAvoidanceRequestPtr;
typedef boost::shared_ptr< ::AU_UAV_ROS::ClearCollisionAvoidanceRequest const> ClearCollisionAvoidanceRequestConstPtr;


template <class ContainerAllocator>
struct ClearCollisionAvoidanceResponse_ {
  typedef ClearCollisionAvoidanceResponse_<ContainerAllocator> Type;

  ClearCollisionAvoidanceResponse_()
  : error()
  {
  }

  ClearCollisionAvoidanceResponse_(const ContainerAllocator& _alloc)
  : error(_alloc)
  {
  }

  typedef std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  _error_type;
  std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  error;


  typedef boost::shared_ptr< ::AU_UAV_ROS::ClearCollisionAvoidanceResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::AU_UAV_ROS::ClearCollisionAvoidanceResponse_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct ClearCollisionAvoidanceResponse
typedef  ::AU_UAV_ROS::ClearCollisionAvoidanceResponse_<std::allocator<void> > ClearCollisionAvoidanceResponse;

typedef boost::shared_ptr< ::AU_UAV_ROS::ClearCollisionAvoidanceResponse> ClearCollisionAvoidanceResponsePtr;
typedef boost::shared_ptr< ::AU_UAV_ROS::ClearCollisionAvoidanceResponse const> ClearCollisionAvoidanceResponseConstPtr;

struct ClearCollisionAvoidance
{

typedef ClearCollisionAvoidanceRequest Request;
typedef ClearCollisionAvoidanceResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct ClearCollisionAvoidance
} // namespace AU_UAV_ROS

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::AU_UAV_ROS::ClearCollisionAvoidanceRequest_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::AU_UAV_ROS::ClearCollisionAvoidanceRequest_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::AU_UAV_ROS::ClearCollisionAvoidanceRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "aa1e4c96cf56304cea7e883d117e24f3";
  }

  static const char* value(const  ::AU_UAV_ROS::ClearCollisionAvoidanceRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xaa1e4c96cf56304cULL;
  static const uint64_t static_value2 = 0xea7e883d117e24f3ULL;
};

template<class ContainerAllocator>
struct DataType< ::AU_UAV_ROS::ClearCollisionAvoidanceRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "AU_UAV_ROS/ClearCollisionAvoidanceRequest";
  }

  static const char* value(const  ::AU_UAV_ROS::ClearCollisionAvoidanceRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::AU_UAV_ROS::ClearCollisionAvoidanceRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "string hello\n\
\n\
";
  }

  static const char* value(const  ::AU_UAV_ROS::ClearCollisionAvoidanceRequest_<ContainerAllocator> &) { return value(); } 
};

} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::AU_UAV_ROS::ClearCollisionAvoidanceResponse_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::AU_UAV_ROS::ClearCollisionAvoidanceResponse_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::AU_UAV_ROS::ClearCollisionAvoidanceResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "eca8b96616c32aacf1be8bbf14c70eba";
  }

  static const char* value(const  ::AU_UAV_ROS::ClearCollisionAvoidanceResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xeca8b96616c32aacULL;
  static const uint64_t static_value2 = 0xf1be8bbf14c70ebaULL;
};

template<class ContainerAllocator>
struct DataType< ::AU_UAV_ROS::ClearCollisionAvoidanceResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "AU_UAV_ROS/ClearCollisionAvoidanceResponse";
  }

  static const char* value(const  ::AU_UAV_ROS::ClearCollisionAvoidanceResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::AU_UAV_ROS::ClearCollisionAvoidanceResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "string error\n\
\n\
\n\
";
  }

  static const char* value(const  ::AU_UAV_ROS::ClearCollisionAvoidanceResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::AU_UAV_ROS::ClearCollisionAvoidanceRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.hello);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct ClearCollisionAvoidanceRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::AU_UAV_ROS::ClearCollisionAvoidanceResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.error);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct ClearCollisionAvoidanceResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<AU_UAV_ROS::ClearCollisionAvoidance> {
  static const char* value() 
  {
    return "3d4ba6c1e7182cfa297a43c7395e613d";
  }

  static const char* value(const AU_UAV_ROS::ClearCollisionAvoidance&) { return value(); } 
};

template<>
struct DataType<AU_UAV_ROS::ClearCollisionAvoidance> {
  static const char* value() 
  {
    return "AU_UAV_ROS/ClearCollisionAvoidance";
  }

  static const char* value(const AU_UAV_ROS::ClearCollisionAvoidance&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<AU_UAV_ROS::ClearCollisionAvoidanceRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "3d4ba6c1e7182cfa297a43c7395e613d";
  }

  static const char* value(const AU_UAV_ROS::ClearCollisionAvoidanceRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<AU_UAV_ROS::ClearCollisionAvoidanceRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "AU_UAV_ROS/ClearCollisionAvoidance";
  }

  static const char* value(const AU_UAV_ROS::ClearCollisionAvoidanceRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<AU_UAV_ROS::ClearCollisionAvoidanceResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "3d4ba6c1e7182cfa297a43c7395e613d";
  }

  static const char* value(const AU_UAV_ROS::ClearCollisionAvoidanceResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<AU_UAV_ROS::ClearCollisionAvoidanceResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "AU_UAV_ROS/ClearCollisionAvoidance";
  }

  static const char* value(const AU_UAV_ROS::ClearCollisionAvoidanceResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // AU_UAV_ROS_SERVICE_CLEARCOLLISIONAVOIDANCE_H

